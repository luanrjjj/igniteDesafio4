{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luan/Documentos/IgniteDesafio4/src/pages/post/[slug].tsx\";\nimport { getPrismicClient } from '../../services/prismic';\nimport styles from './post.module.scss';\nimport Header from '../../components/Header';\nexport default function Post({\n  post\n}) {\n  console.log(1000, post);\n  const img_url = post.data.banner.url;\n  console.log(img_url);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: styles.post,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: post.data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\nexport const getStaticPaths = async () => {\n  const prismic = getPrismicClient(); //const posts = await prismic.query();\n\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const {\n    slug\n  } = params;\n  console.log(500, slug);\n  const prismic = getPrismicClient();\n  const response = await prismic.getByUID('post', String(slug), {});\n  console.log(5000, response);\n  const post = {\n    data: {\n      title: response.data.title,\n      banner: response.data.banner // content:RichText.asHtml(response.data.content)\n\n    },\n    updatedAt: new Date(response.last_publication_date).toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: 'long',\n      year: 'numeric'\n    })\n  };\n  return {\n    props: {\n      post\n    },\n    redirect: 60 * 30\n  };\n};","map":{"version":3,"sources":["/home/luan/Documentos/IgniteDesafio4/src/pages/post/[slug].tsx"],"names":["getPrismicClient","styles","Header","Post","post","console","log","img_url","data","banner","url","container","title","getStaticPaths","prismic","paths","fallback","getStaticProps","params","slug","response","getByUID","String","updatedAt","Date","last_publication_date","toLocaleDateString","day","month","year","props","redirect"],"mappings":";;;AAEA,SAASA,gBAAT,QAAiC,wBAAjC;AAGA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAwBA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAgC;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBF,IAAjB;AACA,QAAMG,OAAO,GAAGH,IAAI,CAACI,IAAL,CAAUC,MAAV,CAAiBC,GAAjC;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACE,sBACE;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAGF;AAAM,MAAA,SAAS,EAAIN,MAAM,CAACU,SAA1B;AAAA,6BACE;AAAS,QAAA,SAAS,EAAIV,MAAM,CAACG,IAA7B;AAAA,+BAEE;AAAA,oBAAKA,IAAI,CAACI,IAAL,CAAUI;AAAf;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHE;AAAA,kBADF;AAeD;AAED,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,OAAO,GAAGd,gBAAgB,EAAhC,CADwC,CAExC;;AAEA,SAAO;AACLe,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,QAAQ,EAAC;AAFJ,GAAP;AAIA,CARK;AAWP,OAAO,MAAMC,cAAc,GAAG,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAoB;AAEhD,QAAM;AAACC,IAAAA;AAAD,MAASD,MAAf;AACAb,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBa,IAAhB;AACA,QAAML,OAAO,GAAGd,gBAAgB,EAAhC;AACA,QAAMoB,QAAQ,GAAG,MAAMN,OAAO,CAACO,QAAR,CAAiB,MAAjB,EAAwBC,MAAM,CAACH,IAAD,CAA9B,EAAqC,EAArC,CAAvB;AAEFd,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBc,QAAjB;AAGE,QAAMhB,IAAI,GAAG;AAEXI,IAAAA,IAAI,EAAE;AACNI,MAAAA,KAAK,EAACQ,QAAQ,CAACZ,IAAT,CAAcI,KADd;AAENH,MAAAA,MAAM,EAACW,QAAQ,CAACZ,IAAT,CAAcC,MAFf,CAGN;;AAHM,KAFK;AAOXc,IAAAA,SAAS,EAAE,IAAIC,IAAJ,CAASJ,QAAQ,CAACK,qBAAlB,EAAyCC,kBAAzC,CAA4D,OAA5D,EAAoE;AAC/EC,MAAAA,GAAG,EAAC,SAD2E;AAE/EC,MAAAA,KAAK,EAAC,MAFyE;AAG/EC,MAAAA,IAAI,EAAE;AAHyE,KAApE;AAPA,GAAb;AAcA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACL1B,MAAAA;AADK,KADF;AAIL2B,IAAAA,QAAQ,EAAC,KAAG;AAJP,GAAP;AAMA,CA9BK","sourcesContent":["import { GetStaticPaths, GetStaticProps } from 'next';\n\nimport { getPrismicClient } from '../../services/prismic';\nimport { RichText } from 'prismic-dom';\nimport commonStyles from '../../styles/common.module.scss';\nimport styles from './post.module.scss';\nimport Header from '../../components/Header'\nimport head from 'next/head'\n\ninterface Post {\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    banner: {\n      url: string;\n    };\n    author: string;\n    content: {\n      heading: string;\n      body: {\n        text: string;\n      }[];\n    }[];\n  };\n}\n\ninterface PostProps {\n  post: Post;\n}\n\nexport default function Post({post}:PostProps) {\nconsole.log(1000,post)\nconst img_url = post.data.banner.url\nconsole.log(img_url)\n  return (\n    <>\n    <Header/>\n  \n  <main className = {styles.container}>\n    <article className = {styles.post}>\n     \n      <h1>{post.data.title}</h1>\n    </article>\n  </main>\n\n   \n   </>\n  )\n  \n}\n\nexport const getStaticPaths = async () => {\n  const prismic = getPrismicClient();\n  //const posts = await prismic.query();\n\n  return {\n    paths: [],\n    fallback:'blocking'\n  }\n };\n\n\nexport const getStaticProps = async ({params}) => {\n  \n  const {slug} = params\n  console.log(500,slug)\n  const prismic = getPrismicClient();\n  const response = await prismic.getByUID('post',String(slug),{});\n\nconsole.log(5000,response)\n\n\n  const post = {\n    \n    data: { \n    title:response.data.title,\n    banner:response.data.banner,\n    // content:RichText.asHtml(response.data.content)\n  },\n    updatedAt: new Date(response.last_publication_date).toLocaleDateString('pt-BR',{\n    day:'2-digit',\n    month:'long',\n    year: 'numeric',\n    })\n  }\n\n  return {\n    props: {\n      post\n    },\n    redirect:60*30,\n  }\n };\n"]},"metadata":{},"sourceType":"module"}