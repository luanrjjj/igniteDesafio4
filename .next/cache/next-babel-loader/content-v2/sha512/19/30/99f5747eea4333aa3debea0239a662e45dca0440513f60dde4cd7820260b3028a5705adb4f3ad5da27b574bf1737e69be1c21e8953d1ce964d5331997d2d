{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luan/Documentos/IgniteDesafio4/src/pages/post/[slug].tsx\";\nimport styles from './post.module.scss';\nimport Header from '../../components/Header';\nexport var __N_SSG = true;\nexport default function Post(_ref) {\n  var post = _ref.post;\n  console.log(1000, post);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: styles.post,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.data.banner.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: post.data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/luan/Documentos/IgniteDesafio4/src/pages/post/[slug].tsx"],"names":["styles","Header","Post","post","console","log","container","data","banner","url","title"],"mappings":";;;AAKA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAwBA,eAAe,SAASC,IAAT,OAAgC;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBF,IAAjB;AAEE,sBACE;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAGF;AAAM,MAAA,SAAS,EAAIH,MAAM,CAACM,SAA1B;AAAA,6BACE;AAAS,QAAA,SAAS,EAAIN,MAAM,CAACG,IAA7B;AAAA,gCACE;AAAA,iCACF;AAAK,YAAA,GAAG,EAAIA,IAAI,CAACI,IAAL,CAAUC,MAAV,CAAiBC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,oBAAKN,IAAI,CAACI,IAAL,CAAUG;AAAf;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHE;AAAA,kBADF;AAiBD;KApBuBR,I","sourcesContent":["import { GetStaticPaths, GetStaticProps } from 'next';\n\nimport { getPrismicClient } from '../../services/prismic';\nimport { RichText } from 'prismic-dom';\nimport commonStyles from '../../styles/common.module.scss';\nimport styles from './post.module.scss';\nimport Header from '../../components/Header'\nimport head from 'next/head'\n\ninterface Post {\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    banner: {\n      url: string;\n    };\n    author: string;\n    content: {\n      heading: string;\n      body: {\n        text: string;\n      }[];\n    }[];\n  };\n}\n\ninterface PostProps {\n  post: Post;\n}\n\nexport default function Post({post}:PostProps) {\nconsole.log(1000,post)\n\n  return (\n    <>\n    <Header/>\n  \n  <main className = {styles.container}>\n    <article className = {styles.post}>\n      <div>\n    <img src = {post.data.banner.url}/>\n    </div>\n      <h1>{post.data.title}</h1>\n    </article>\n  </main>\n\n   \n   </>\n  )\n  \n}\n\nexport const getStaticPaths = async () => {\n  const prismic = getPrismicClient();\n  //const posts = await prismic.query();\n\n  return {\n    paths: [],\n    fallback:'blocking'\n  }\n };\n\n\nexport const getStaticProps = async ({params}) => {\n  \n  const {slug} = params\n  console.log(500,slug)\n  const prismic = getPrismicClient();\n  const response = await prismic.getByUID('post',String(slug),{});\n\nconsole.log(5000,response)\n\n\n  const post = {\n    \n    data: { \n    title:response.data.title,\n    banner:response.data.banner,\n    // content:RichText.asHtml(response.data.content)\n  },\n    updatedAt: new Date(response.last_publication_date).toLocaleDateString('pt-BR',{\n    day:'2-digit',\n    month:'long',\n    year: 'numeric',\n    })\n  }\n\n  return {\n    props: {\n      post\n    },\n    redirect:60*30,\n  }\n };\n"]},"metadata":{},"sourceType":"module"}