{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luan/Documentos/IgniteDesafio4/src/pages/post/[slug].tsx\";\nimport { getPrismicClient } from '../../services/prismic';\nimport styles from './post.module.scss';\nimport Header from '../../components/Header';\nimport { AiOutlineCalendar, AiOutlineUser } from 'react-icons/ai';\nexport default function Post({\n  post\n}) {\n  console.log(1000000000, post.data.content);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.banner,\n        src: post.data.banner.url,\n        alt: \"banner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: styles.post,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.title,\n          children: post.data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.DateAndAuthor,\n          children: [/*#__PURE__*/_jsxDEV(AiOutlineCalendar, {\n            className: styles.calendaricon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n            children: post.first_publication_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(AiOutlineUser, {\n            className: styles.usericon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.data.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postContent,\n          children: post.data.content.map(item => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.bodyText,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: styles.heading,\n                  children: item.heading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: styles.text,\n                  children: item.body[0].text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 9\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\nexport const getStaticPaths = async () => {\n  const prismic = getPrismicClient(); //const posts = await prismic.query();\n\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const {\n    slug\n  } = params;\n  const prismic = getPrismicClient();\n  const response = await prismic.getByUID('post', String(slug), {});\n  console.log(50000000000000, response);\n  const post = {\n    first_publication_date: new Date(response.first_publication_date).toLocaleDateString('pt-br', {\n      day: '2-digit',\n      month: 'long',\n      year: 'numeric'\n    }),\n    data: {\n      author: response.data.author,\n      title: response.data.title,\n      banner: response.data.banner,\n      content: response.data.content.map(item => {\n        return {\n          heading: item.heading,\n          body: item.body\n        };\n      }) //content:RichText.asHtml(response.data.content)\n\n    },\n    updatedAt: new Date(response.last_publication_date).toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: 'long',\n      year: 'numeric'\n    })\n  };\n  return {\n    props: {\n      post\n    },\n    redirect: 60 * 30\n  };\n};","map":{"version":3,"sources":["/home/luan/Documentos/IgniteDesafio4/src/pages/post/[slug].tsx"],"names":["getPrismicClient","styles","Header","AiOutlineCalendar","AiOutlineUser","Post","post","console","log","data","content","container","banner","url","title","DateAndAuthor","calendaricon","first_publication_date","usericon","author","postContent","map","item","bodyText","heading","text","body","getStaticPaths","prismic","paths","fallback","getStaticProps","params","slug","response","getByUID","String","Date","toLocaleDateString","day","month","year","updatedAt","last_publication_date","props","redirect"],"mappings":"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","sourcesContent":["import { GetStaticPaths, GetStaticProps } from 'next';\n\nimport { getPrismicClient } from '../../services/prismic';\nimport { RichText } from 'prismic-dom';\nimport commonStyles from '../../styles/common.module.scss';\nimport styles from './post.module.scss';\nimport Header from '../../components/Header'\nimport head from 'next/head'\nimport { AiOutlineCalendar,AiOutlineUser} from 'react-icons/ai'\n\n\ninterface Post {\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    banner: {\n      url: string;\n    };\n    author: string;\n    content: {\n      heading: string;\n      body: {\n        text: string;\n      }[];\n    }[];\n  };\n}\n\ninterface PostProps {\n  post: Post;\n}\n\nexport default function Post({post}:PostProps) {\n  console.log(1000000000,post.data.content)\n\n\n\n  return (\n    <>\n    <Header/>\n  \n  <main className = {styles.container}>\n  <img className= {styles.banner} src = {post.data.banner.url} alt = \"banner\"/>\n  \n    <article className = {styles.post}>\n      <h1 className={styles.title}>{post.data.title}</h1>\n\n      <div className= {styles.DateAndAuthor}> \n\n      <AiOutlineCalendar className = { styles.calendaricon }></AiOutlineCalendar>\n      <time>{post.first_publication_date}</time>\n      <AiOutlineUser className= {styles.usericon}></AiOutlineUser>\n      <p>{post.data.author}</p>\n\n      </div>\n\n      <div className =  {styles.postContent}>\n       \n        {post.data.content.map(item => {\n      return (\n        <>\n        <div className= {styles.bodyText}>\n          <p className = {styles.heading}>\n          {item.heading}\n          </p>\n          <p className = {styles.text}>\n            {item.body[0].text}\n          </p>\n          </div>\n          </>\n      )\n        })}\n    </div>\n   \n    </article>\n  </main>\n\n \n   \n   </>\n  )\n  \n}\n\nexport const getStaticPaths = async () => {\n  const prismic = getPrismicClient();\n  //const posts = await prismic.query();\n\n  return {\n    paths: [],\n    fallback:'blocking'\n  }\n };\n\n\nexport const getStaticProps = async ({params}) => {\n  \n  const {slug} = params\n \n  const prismic = getPrismicClient();\n  const response = await prismic.getByUID('post',String(slug),{});\n\n\nconsole.log(50000000000000,response)\n\n  const post = {\n    first_publication_date:new Date(response.first_publication_date).toLocaleDateString('pt-br',{\n      day:'2-digit',\n      month: 'long',\n      year: 'numeric'\n    }),\n    data: { \n    author:response.data.author,\n    title:response.data.title,\n    banner:response.data.banner,\n      content:response.data.content.map (item => {\n        return {\n          heading:item.heading,\n          body:item.body\n        }\n      })\n    \n    //content:RichText.asHtml(response.data.content)\n  },\n    updatedAt: new Date(response.last_publication_date).toLocaleDateString('pt-BR',{\n    day:'2-digit',\n    month:'long',\n    year: 'numeric',\n    })\n  }\n\n\n \n  return {\n    props: {\n      post\n    },\n    redirect:60*30,\n  }\n };\n"]},"metadata":{},"sourceType":"module"}