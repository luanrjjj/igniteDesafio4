{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luan/Documentos/IgniteDesafio4/src/pages/index.tsx\";\nimport Prismic from '@prismicio/client';\nimport Head from \"next/head\";\nimport { getPrismicClient } from '../services/prismic';\nimport styles from './home.module.scss';\nimport { useRouter } from 'next/router';\nexport default function Home({\n  posts\n}) {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [posts.data.title, \" | Ignews\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.post,\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: post.data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n            children: post.first_publication_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\nexport const getStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const postsResponse = await prismic.query([Prismic.Predicates.at('document.type', 'post')]);\n  const posts = postsResponse.results.map(post => {\n    return {\n      slug: post.uid,\n      first_publication_date: new Date(post.first_publication_date).toLocaleDateString('pt-br', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }),\n      data: {\n        title: post.data.title,\n        subtitle: post.data.subtitle,\n        author: post.data.author\n      }\n    };\n  });\n  console.log(100, JSON.stringify(postsResponse, null, 2));\n  return {\n    props: {\n      postsResponse\n    }\n  };\n};","map":{"version":3,"sources":["/home/luan/Documentos/IgniteDesafio4/src/pages/index.tsx"],"names":["Prismic","Head","getPrismicClient","styles","useRouter","Home","posts","router","data","title","container","post","map","first_publication_date","getStaticProps","prismic","postsResponse","query","Predicates","at","results","slug","uid","Date","toLocaleDateString","day","month","year","subtitle","author","console","log","JSON","stringify","props"],"mappings":";;;AAEA,OAAOA,OAAP,MAAoB,mBAApB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAGA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AA0BA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAuB;AAEpC,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACF,sBAEE;AAAA,4BACA,QAAC,IAAD;AAAA,6BACE;AAAA,mBAAQE,KAAK,CAACE,IAAN,CAAWC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAKA;AAAM,MAAA,SAAS,EAAIN,MAAM,CAACO,SAA1B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAIP,MAAM,CAACQ,IAAzB;AAAA,kBACCL,KAAK,CAACM,GAAN,CAAUD,IAAI,iBACb;AAAA,kCACA;AAAA,sBAAKA,IAAI,CAACH,IAAL,CAAUC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAOE,IAAI,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA,wBADD;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBAFF;AAsBC;AAED,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,OAAO,GAAGb,gBAAgB,EAAhC;AAIA,QAAMc,aAAa,GAAG,MAAMD,OAAO,CAACE,KAAR,CAC1B,CAACjB,OAAO,CAACkB,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAsC,MAAtC,CAAD,CAD0B,CAA5B;AAMA,QAAMb,KAAK,GAAGU,aAAa,CAACI,OAAd,CAAsBR,GAAtB,CAA0BD,IAAI,IAAI;AAC9C,WAAO;AACLU,MAAAA,IAAI,EAACV,IAAI,CAACW,GADL;AAELT,MAAAA,sBAAsB,EAAC,IAAIU,IAAJ,CAASZ,IAAI,CAACE,sBAAd,EAAsCW,kBAAtC,CAAyD,OAAzD,EAAiE;AACtFC,QAAAA,GAAG,EAAC,SADkF;AAEtFC,QAAAA,KAAK,EAAE,MAF+E;AAGtFC,QAAAA,IAAI,EAAE;AAHgF,OAAjE,CAFlB;AAOTnB,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEE,IAAI,CAACH,IAAL,CAAUC,KADb;AAEJmB,QAAAA,QAAQ,EAAEjB,IAAI,CAACH,IAAL,CAAUoB,QAFhB;AAGJC,QAAAA,MAAM,EAAElB,IAAI,CAACH,IAAL,CAAUqB;AAHd;AAPG,KAAP;AAaD,GAda,CAAd;AAgBAC,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBC,IAAI,CAACC,SAAL,CAAejB,aAAf,EAA6B,IAA7B,EAAkC,CAAlC,CAAhB;AAEA,SAAO;AAACkB,IAAAA,KAAK,EAAC;AACZlB,MAAAA;AADY;AAAP,GAAP;AAID,CAjCM","sourcesContent":["import { GetStaticProps } from 'next';\nimport { apiResolver } from 'next/dist/next-server/server/api-utils';\nimport Prismic from '@prismicio/client'\n\nimport Head from \"next/head\"\nimport { getPrismicClient } from '../services/prismic';\n\nimport commonStyles from '../styles/common.module.scss';\nimport styles from './home.module.scss';\nimport { useRouter } from 'next/router';\n\ninterface Post {\n \n  uid?: string;\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    subtitle: string;\n    author: string;\n  };\n}\n\ninterface PostsProps {\n  posts: Post []\n}\n\ninterface PostPagination {\n  next_page: string;\n  results: Post[];\n}\n\ninterface HomeProps {\n  postsPagination: PostPagination;\n}\n\nexport default function Home({posts}) {\n\n  const router = useRouter()\nreturn (\n\n  <>\n  <Head>\n    <title>{posts.data.title} | Ignews</title>\n  </Head>\n\n  <main className = {styles.container}>\n    <div className = {styles.post}> \n    {posts.map(post => (\n      <>\n      <h1>{post.data.title}</h1>\n      <time>{post.first_publication_date}</time>\n</>\n      ))\n    }\n\n  </div>\n  </main>\n  </>\n    \n)\n}\n\nexport const getStaticProps = async () => {\n  const prismic = getPrismicClient();\n\n\n\n  const postsResponse = await prismic.query(\n    [Prismic.Predicates.at('document.type','post')\n  \n  ]\n  ); \n\n  const posts = postsResponse.results.map(post => {\n    return {\n      slug:post.uid,\n      first_publication_date:new Date(post.first_publication_date).toLocaleDateString('pt-br',{\n        day:'2-digit',\n        month: 'long',\n        year: 'numeric'\n      }),\n  data: {\n    title: post.data.title,\n    subtitle: post.data.subtitle,\n    author: post.data.author,\n    }\n  }\n  })\n\n  console.log(100,JSON.stringify(postsResponse,null,2))\n\n  return {props:{\n    postsResponse\n  }}\n\n}\n"]},"metadata":{},"sourceType":"module"}