{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luan/Documentos/IgniteDesafio4/src/pages/index.tsx\";\nimport Prismic from '@prismicio/client';\nimport { AiOutlineCalendar, AiOutlineUser } from 'react-icons/ai';\nimport Head from \"next/head\";\nimport { getPrismicClient } from '../services/prismic';\nimport { useState } from 'react';\nimport styles from './home.module.scss';\nimport { useRouter } from 'next/router';\nexport default function Home({\n  postPagination\n}) {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(postPagination.posts[0]);\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  console.log(120000, postPagination);\n\n  if (!postPagination.next_page === null) {} else {\n    const posts = postPagination.posts;\n  }\n\n  console.log(1000, posts);\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \" Posts| Ignews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.posts,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.images,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/Vector.png\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.secondimage,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/spacetraveling.png\",\n              alt: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, this), posts.map(post => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: post.data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.data.subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.DateAndAuthor,\n              children: [/*#__PURE__*/_jsxDEV(AiOutlineCalendar, {\n                className: styles.calendaricon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n                children: post.first_publication_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(AiOutlineUser, {\n                className: styles.usericon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.data.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 7\n            }, this)]\n          }, post.slug, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }, this)\n        }, void 0, false)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"LoadMore\",\n          children: \"Carregar Mais\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\nexport const getStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const postsResponse = await prismic.query([Prismic.Predicates.at('document.type', 'post')], {\n    fetch: ['post.title', 'post.subtitle', 'post.author', 'post.content'],\n    pageSize: 1\n  });\n  const posts = postsResponse.results.map(post => {\n    return {\n      slug: post.uid,\n      first_publication_date: new Date(post.first_publication_date).toLocaleDateString('pt-br', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }),\n      data: {\n        title: post.data.title,\n        subtitle: post.data.subtitle,\n        author: post.data.author\n      }\n    };\n  }); //console.log(100,JSON.stringify(postsResponse,null,2))\n\n  console.log(200, posts);\n  const postPagination = {\n    posts,\n    next_page: postsResponse.next_page\n  };\n  return {\n    props: {\n      postPagination\n    },\n    redirect: 60 * 30\n  };\n};","map":{"version":3,"sources":["/home/luan/Documentos/IgniteDesafio4/src/pages/index.tsx"],"names":["Prismic","AiOutlineCalendar","AiOutlineUser","Head","getPrismicClient","useState","styles","useRouter","Home","postPagination","posts","setPosts","page","setPage","console","log","next_page","router","container","images","secondimage","map","post","data","title","subtitle","DateAndAuthor","calendaricon","first_publication_date","usericon","author","slug","getStaticProps","prismic","postsResponse","query","Predicates","at","fetch","pageSize","results","uid","Date","toLocaleDateString","day","month","year","props","redirect"],"mappings":"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","sourcesContent":["import { GetStaticProps } from 'next';\nimport { apiResolver } from 'next/dist/next-server/server/api-utils';\nimport Prismic from '@prismicio/client'\nimport { AiOutlineCalendar,AiOutlineUser} from 'react-icons/ai'\nimport Head from \"next/head\"\nimport { getPrismicClient } from '../services/prismic';\nimport {useState} from 'react';\n\nimport commonStyles from '../styles/common.module.scss';\nimport styles from './home.module.scss';\nimport { useRouter } from 'next/router';\n\ninterface Post {\n \n  uid?: string;\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    subtitle: string;\n    author: string;\n  };\n}\n\ninterface PostsProps {\n  posts: Post []\n}\n\ninterface PostPagination {\n  next_page: string;\n  results: Post[];\n}\n\ninterface HomeProps {\n  postsPagination: PostPagination;\n}\n\nexport default function Home({postPagination}) {\n  const [posts,setPosts] = useState(postPagination.posts[0])\n  const [page,setPage] = useState(1)\n\n\nconsole.log(120000,postPagination)\n\nif (!postPagination.next_page===null) {\n  \n\n\n} else {  \n  const posts = postPagination.posts\n}\nconsole.log(1000,posts)\n\n  const router = useRouter()\nreturn (\n\n  <>\n  <Head>\n    <title> Posts| Ignews</title>\n  </Head>\n\n  <main className = {styles.container}>\n   \n    <div className = {styles.posts}> \n    <div className={styles.images}>\n      <img src =\"/images/Vector.png\" alt = \"logo\"/>\n      <div className= {styles.secondimage}>\n      <img  src =\"/images/spacetraveling.png\" alt = \"logo\"/> \n      </div>  \n    </div>\n    {posts.map(post => (\n      <>\n      <a key = {post.slug}>\n      <strong>{post.data.title}</strong>\n      <p>{post.data.subtitle}</p>\n      <div className= {styles.DateAndAuthor}> \n      <AiOutlineCalendar className = { styles.calendaricon }></AiOutlineCalendar>\n      <time>{post.first_publication_date}</time>\n      <AiOutlineUser className= {styles.usericon}></AiOutlineUser>\n      <p>{post.data.author}</p>\n      </div>\n\n      </a>\n</>\n      ))\n    }\n<button className = \"LoadMore\">\n  Carregar Mais\n</button>\n  </div>\n  </main>\n  </>\n    \n)\n}\n\nexport const getStaticProps = async () => {\n\n\n  const prismic = getPrismicClient();\n  \n  \n  \n  const postsResponse = await prismic.query(\n    [Prismic.Predicates.at('document.type','post')],\n    {\n      fetch:['post.title','post.subtitle','post.author','post.content'],\n      pageSize:1\n    } \n  ); \n\n  \n  const posts = postsResponse.results.map(post => {\n    return {\n      slug:post.uid,\n      first_publication_date:new Date(post.first_publication_date).toLocaleDateString('pt-br',{\n        day:'2-digit',\n        month: 'long',\n        year: 'numeric'\n      }),\n  data: {\n    title: post.data.title,\n    subtitle: post.data.subtitle,\n    author: post.data.author,\n    }\n  }\n  })\n  \n  //console.log(100,JSON.stringify(postsResponse,null,2))\n  console.log(200,posts)\n\n  const postPagination = {\n    posts,\n    next_page:postsResponse.next_page\n  }\n\n  return {props:{\n    postPagination,\n    \n  },\nredirect:60*30}\n\n}\n"]},"metadata":{},"sourceType":"module"}