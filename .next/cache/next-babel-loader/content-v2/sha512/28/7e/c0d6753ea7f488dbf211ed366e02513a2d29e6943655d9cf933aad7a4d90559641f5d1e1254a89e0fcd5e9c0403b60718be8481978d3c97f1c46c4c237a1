{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luan/Documentos/IgniteDesafio4/src/pages/index.tsx\";\nimport Prismic from '@prismicio/client';\nimport { AiOutlineCalendar, AiOutlineUser } from 'react-icons/ai';\nimport Head from \"next/head\";\nimport { getPrismicClient } from '../services/prismic';\nimport styles from './home.module.scss';\nimport { useRouter } from 'next/router';\nexport default function Home({\n  posts\n}) {\n  console.log(300, posts);\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \" Posts| Ignews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.posts,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.images,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/Vector.png\",\n            alt: \"Vector\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.secondimage,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/spacetraveling.png\",\n              alt: \"Girl Coding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this), posts.map(post => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: post.data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.data.subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.DateAndAuthor,\n              children: [/*#__PURE__*/_jsxDEV(AiOutlineCalendar, {\n                className: styles.calendaricon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n                children: post.first_publication_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(AiOutlineUser, {\n                className: styles.usericon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.data.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 7\n            }, this)]\n          }, post.slug, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }, this)\n        }, void 0, false))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\nexport const getStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const postsResponse = await prismic.query([Prismic.Predicates.at('document.type', 'post')]);\n  const posts = postsResponse.results.map(post => {\n    return {\n      slug: post.uid,\n      first_publication_date: new Date(post.first_publication_date).toLocaleDateString('pt-br', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }),\n      data: {\n        title: post.data.title,\n        subtitle: post.data.subtitle,\n        author: post.data.author\n      }\n    };\n  });\n  console.log(100, JSON.stringify(postsResponse, null, 2));\n  console.log(200, posts);\n  return {\n    props: {\n      posts\n    },\n    redirect: 60 * 30\n  };\n};","map":{"version":3,"sources":["/home/luan/Documentos/IgniteDesafio4/src/pages/index.tsx"],"names":["Prismic","AiOutlineCalendar","AiOutlineUser","Head","getPrismicClient","styles","useRouter","Home","posts","console","log","router","container","images","secondimage","map","post","data","title","subtitle","DateAndAuthor","calendaricon","first_publication_date","usericon","author","slug","getStaticProps","prismic","postsResponse","query","Predicates","at","results","uid","Date","toLocaleDateString","day","month","year","JSON","stringify","props","redirect"],"mappings":"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","sourcesContent":["import { GetStaticProps } from 'next';\nimport { apiResolver } from 'next/dist/next-server/server/api-utils';\nimport Prismic from '@prismicio/client'\nimport { AiOutlineCalendar,AiOutlineUser} from 'react-icons/ai'\nimport Head from \"next/head\"\nimport { getPrismicClient } from '../services/prismic';\n\nimport commonStyles from '../styles/common.module.scss';\nimport styles from './home.module.scss';\nimport { useRouter } from 'next/router';\n\ninterface Post {\n \n  uid?: string;\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    subtitle: string;\n    author: string;\n  };\n}\n\ninterface PostsProps {\n  posts: Post []\n}\n\ninterface PostPagination {\n  next_page: string;\n  results: Post[];\n}\n\ninterface HomeProps {\n  postsPagination: PostPagination;\n}\n\nexport default function Home({posts}) {\nconsole.log(300,posts)\n  const router = useRouter()\nreturn (\n\n  <>\n  <Head>\n    <title> Posts| Ignews</title>\n  </Head>\n\n  <main className = {styles.container}>\n   \n    <div className = {styles.posts}> \n    <div className={styles.images}>\n      <img src =\"/images/Vector.png\" alt = \"Vector\"/>\n      <div className= {styles.secondimage}>\n      <img  src =\"/images/spacetraveling.png\" alt = \"Girl Coding\"/> \n      </div>  \n    </div>\n    {posts.map(post => (\n      <>\n      <a key = {post.slug}>\n      <strong>{post.data.title}</strong>\n      <p>{post.data.subtitle}</p>\n      <div className= {styles.DateAndAuthor}> \n      <AiOutlineCalendar className = { styles.calendaricon }></AiOutlineCalendar>\n      <time>{post.first_publication_date}</time>\n      <AiOutlineUser className= {styles.usericon}></AiOutlineUser>\n      <p>{post.data.author}</p>\n      </div>\n\n      </a>\n</>\n      ))\n    }\n\n  </div>\n  </main>\n  </>\n    \n)\n}\n\nexport const getStaticProps = async () => {\n  const prismic = getPrismicClient();\n\n\n\n  const postsResponse = await prismic.query(\n    [Prismic.Predicates.at('document.type','post')\n  \n  ]\n  ); \n\n  const posts = postsResponse.results.map(post => {\n    return {\n      slug:post.uid,\n      first_publication_date:new Date(post.first_publication_date).toLocaleDateString('pt-br',{\n        day:'2-digit',\n        month: 'long',\n        year: 'numeric'\n      }),\n  data: {\n    title: post.data.title,\n    subtitle: post.data.subtitle,\n    author: post.data.author,\n    }\n  }\n  })\n  \n  console.log(100,JSON.stringify(postsResponse,null,2))\n  console.log(200,posts)\n\n  return {props:{\n    posts\n  },\nredirect:60*30}\n\n}\n"]},"metadata":{},"sourceType":"module"}