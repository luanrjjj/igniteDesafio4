{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luan/Documentos/IgniteDesafio4/src/pages/post/[slug].tsx\";\nimport Header from '../../components/Header';\nexport var __N_SSG = true;\nexport default function Post(_ref) {\n  var post = _ref.post;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/luan/Documentos/IgniteDesafio4/src/pages/post/[slug].tsx"],"names":["Header","Post","post"],"mappings":";;;AAMA,OAAOA,MAAP,MAAmB,yBAAnB;;AAwBA,eAAe,SAASC,IAAT,OAAgC;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAG7C,sBACE;AAAA,2BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AASD;KAZuBD,I","sourcesContent":["import { GetStaticPaths, GetStaticProps } from 'next';\n\nimport { getPrismicClient } from '../../services/prismic';\nimport { RichText } from 'prismic-dom';\nimport commonStyles from '../../styles/common.module.scss';\nimport styles from './post.module.scss';\nimport Header from '../../components/Header'\nimport head from 'next/head'\n\ninterface Post {\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    banner: {\n      url: string;\n    };\n    author: string;\n    content: {\n      heading: string;\n      body: {\n        text: string;\n      }[];\n    }[];\n  };\n}\n\ninterface PostProps {\n  post: Post;\n}\n\nexport default function Post({post}:PostProps) {\n\n\n  return (\n    <>\n    <Header/>\n  \n  \n   \n   </>\n  )\n  \n}\n\nexport const getStaticPaths = async () => {\n  const prismic = getPrismicClient();\n  //const posts = await prismic.query();\n\n  return {\n    paths: [],\n    fallback:'blocking'\n  }\n };\n\n\nexport const getStaticProps = async ({params}) => {\n  \n  const {slug} = params\n  console.log(500,slug)\n  const prismic = getPrismicClient();\n  const response = await prismic.getByUID('post',String(slug),{});\n\nconsole.log(5000,response)\n\n\n  const post = {\n    slug,\n    title:response.data.title,\n    // content:RichText.asHtml(response.data.content),\n    updatedAt: new Date(response.last_publication_date).toLocaleDateString('pt-BR',{\n    day:'2-digit',\n    month:'long',\n    year: 'numeric',\n    })\n  }\n\n  return {\n    props: {\n      post\n    },\n    redirect:60*30,\n  }\n };\n"]},"metadata":{},"sourceType":"module"}